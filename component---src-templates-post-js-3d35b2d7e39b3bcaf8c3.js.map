{"version":3,"sources":["webpack:///./src/components/Sidebar.js","webpack:///./src/components/Suggested.js","webpack:///./src/components/Comment.js","webpack:///./src/templates/post.js","webpack:///./content/images/tania-2020.png","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Sidebar","post","tags","frontmatter","className","map","tag","key","to","slugify","date","href","Suggested","previous","next","fields","slug","rel","title","Comment","commentBox","ref","PostTemplate","data","pageContext","props","markdownRemark","thumbnail","React","createRef","useEffect","commentScript","document","createElement","theme","window","localStorage","getItem","async","src","setAttribute","current","appendChild","console","log","Layout","Helmet","config","siteTitle","SEO","postPath","postNode","postSEO","fixed","childImageSharp","description","dangerouslySetInnerHTML","__html","html","id","pageQuery","module","exports","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-templates-post-js-3d35b2d7e39b3bcaf8c3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport tania from '../../content/images/tania-2020.png'\n\nimport { slugify } from '../utils/helpers'\n\nexport default function Sidebar({ post, ...props }) {\n  const { tags } = post.frontmatter\n\n  return (\n    <aside>\n      <div className=\"aside-content\">\n        {/* <section>\n          <img src={tania} alt=\"Tania\" className=\"avatar\" />\n          <p>\n            I'm Tania, a software engineer and open-source creator. This website\n            is a compendium of things I've learned while writing code for fun\n            and profit.\n          </p>\n        </section> */}\n        <section>\n          <h3>Tags</h3>\n          <div className=\"cell tags\">\n            {tags &&\n              tags.map((tag) => (\n                <Link\n                  key={tag}\n                  to={`/tags/${slugify(tag)}`}\n                  className={`tag-${tag}`}\n                >\n                  {tag}\n                </Link>\n              ))}\n          </div>\n        </section>\n        <section>\n          <h3>Published</h3>\n          <time>{post.frontmatter.date}</time>\n        </section>\n        <section>\n          <h3>Comments</h3>\n          <a href=\"#comments\" className=\"link\">\n            View all comments\n          </a>\n        </section>\n        {/* <section>\n          <h3>Stay in touch</h3>\n          <nav>\n            <a\n              href=\"https://taniarascia.substack.com/subscribe\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link\"\n            >\n              <span className=\"emoji\">‚úâÔ∏è</span> Email newsletter\n            </a>\n            <Link\n              to=\"/rss.xml\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link\"\n            >\n              <span className=\"emoji\">‚ò¢Ô∏è</span> RSS feed\n            </Link>\n            <a\n              href=\"https://github.com/taniarascia\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link\"\n            >\n              <span className=\"emoji\">üêô</span> GitHub: @taniarascia\n            </a>\n            <a\n              href=\"https://twitter.com/taniarascia\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link\"\n            >\n              <span className=\"emoji\">üê¶</span> Twitter: @taniarascia\n            </a>\n          </nav>\n        </section>\n        <section>\n          <h3>Support</h3>\n          <p>\n            Everything I write and create is <b>free</b>. I will{' '}\n            <b>never have ads, paywalls, or sponsored content</b> on my website.\n          </p>\n          <nav style={{ marginTop: '1rem' }}>\n            <a\n              href=\"https://ko-fi.com/taniarascia\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              className=\"link\"\n            >\n              <span className=\"emoji\">‚òï</span> Buy me a coffee\n            </a>\n          </nav>\n        </section> */}\n      </div>\n    </aside>\n  )\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default function Suggested({ previous, next }) {\n  return (\n    <nav className=\"flex container suggested\">\n      {previous && (\n        <Link to={previous.fields.slug} rel=\"prev\">\n          <span>Previous</span>\n          {previous.frontmatter.title}\n        </Link>\n      )}\n      {next && (\n        <Link to={next.fields.slug} rel=\"next\">\n          <span>Next</span>\n          {next.frontmatter.title}\n        </Link>\n      )}\n    </nav>\n  )\n}\n","import React from 'react'\n\nexport default function Comment({ commentBox }) {\n  return <div ref={commentBox} className=\"comments\" />\n}\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport Img from 'gatsby-image'\n\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport Suggested from '../components/Suggested'\nimport SEO from '../components/SEO'\nimport Comment from '../components/Comment'\n\nimport config from '../utils/config'\n\nexport default function PostTemplate({ data, pageContext, ...props }) {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n  const { thumbnail } = post.frontmatter\n  const commentBox = React.createRef()\n\n  useEffect(() => {\n    const commentScript = document.createElement('script')\n    const theme =\n      typeof window !== 'undefined' && localStorage.getItem('theme') === 'dark'\n        ? 'github-dark'\n        : 'github-light'\n    commentScript.async = true\n    commentScript.src = 'https://utteranc.es/client.js'\n    commentScript.setAttribute('repo', 'taniarascia/comments') // CHANGE THIS if you're just going to clone this repo and use the code. Do not test your code using my repo.\n    commentScript.setAttribute('issue-term', 'pathname')\n    commentScript.setAttribute('id', 'utterances')\n    commentScript.setAttribute('theme', theme)\n    commentScript.setAttribute('crossorigin', 'anonymous')\n    if (commentBox && commentBox.current) {\n      commentBox.current.appendChild(commentScript)\n    } else {\n      console.log(`Error adding utterances comments on: ${commentBox}`)\n    }\n  }, []) // eslint-disable-line\n\n  return (\n    <Layout>\n      <Helmet title={`${post.frontmatter.title} | ${config.siteTitle}`} />\n      <SEO postPath={post.fields.slug} postNode={post} postSEO />\n      <div className=\"container\">\n        <section className=\"grid post\">\n          <article>\n            <header className=\"article-header\">\n              <div className=\"container\">\n                <div className=\"thumb\">\n                  {thumbnail && (\n                    <Img\n                      fixed={thumbnail.childImageSharp.fixed}\n                      className=\"post-thumbnail\"\n                    />\n                  )}\n                  <h1>{post.frontmatter.title}</h1>\n                </div>\n                {post.frontmatter.description && (\n                  <p className=\"description\">{post.frontmatter.description}</p>\n                )}\n              </div>\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n            <div id=\"comments\">\n              <h2>Comments</h2>\n              <Comment commentBox={commentBox} />\n            </div>\n          </article>\n          <Sidebar post={post} {...props} />\n        </section>\n        <Suggested previous={previous} next={next} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        description\n        thumbnail {\n          childImageSharp {\n            fixed(width: 150, height: 150) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","module.exports = __webpack_public_path__ + \"static/tania-2020-13b688c1c18a74a7759ab182f609f79e.png\";","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}