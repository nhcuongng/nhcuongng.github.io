{"version":3,"sources":["webpack:///./src/pages/guides.js","webpack:///./src/components/Guides.js"],"names":["BlogIndex","posts","data","allMarkdownRemark","edges","simplifiedPosts","useMemo","getSimplifiedPosts","thumbnails","title","config","siteTitle","className","pageQuery","Guides","LinkType","guide","children","slug","key","id","to","href","path","map","staticThumbnail","src","alt","height","width","fixed","thumbnail","description"],"mappings":"6FAAA,0LAWe,SAASA,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACfC,kBAAkBC,MAC/BC,EAAkBC,mBACtB,kBAAMC,YAAmBN,EAAO,CAAEO,YAAY,MAC9C,CAACP,IAGH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQQ,MAAK,YAAcC,IAAOC,YAClC,kBAAC,IAAD,MACA,gCACE,yBAAKC,UAAU,yBACb,sCACA,uBAAGA,UAAU,YAAb,iDAKJ,iCACE,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAQV,KAAMG,QAQnB,IAAMQ,EAAS,a,kCCzCtB,4FAIe,SAASC,EAAT,GAA2B,IAATZ,EAAQ,EAARA,KACzBa,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACfD,EAAME,KACJ,kBAAC,OAAD,CAAMC,IAAKH,EAAMI,GAAIC,GAAIL,EAAME,MAC5BD,GAGH,uBAAGE,IAAKH,EAAMI,GAAIE,KAAMN,EAAMO,MAC3BN,IAIP,OACE,yBAAKL,UAAU,cACZV,EAAKsB,KAAI,SAACR,GACT,OACE,kBAACD,EAAD,CAAUI,IAAKH,EAAMI,GAAIJ,MAAOA,GAC7BA,EAAMS,gBACL,yBACEC,IAAKV,EAAMS,gBACXE,IAAKX,EAAMI,GACXQ,OAAO,KACPC,MAAM,OAGR,kBAAC,IAAD,CAAKC,MAAOd,EAAMe,YAEpB,4BAAKf,EAAMP,OACVO,EAAMgB,aAAe,uBAAGpB,UAAU,eAAeI,EAAMgB","file":"component---src-pages-guides-js-0bdec75d5c36ccbe27c8.js","sourcesContent":["import React, { useMemo } from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport Guides from '../components/Guides'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\nexport default function BlogIndex({ data }) {\n  const posts = data.allMarkdownRemark.edges\n  const simplifiedPosts = useMemo(\n    () => getSimplifiedPosts(posts, { thumbnails: true }),\n    [posts]\n  )\n\n  return (\n    <Layout>\n      <Helmet title={`Guides | ${config.siteTitle}`} />\n      <SEO />\n      <header>\n        <div className=\"container text-center\">\n          <h1>Guides</h1>\n          <p className=\"subtitle\">\n            The missing instruction manuals of the web.\n          </p>\n        </div>\n      </header>\n      <section>\n        <div className=\"guides-section\">\n          <div className=\"container\">\n            <Guides data={simplifiedPosts} />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query GuidesQuery {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { in: \"Guides\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            thumbnail {\n              childImageSharp {\n                fixed(width: 50, height: 50) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport default function Guides({ data }) {\n  const LinkType = ({ guide, children }) =>\n    guide.slug ? (\n      <Link key={guide.id} to={guide.slug}>\n        {children}\n      </Link>\n    ) : (\n      <a key={guide.id} href={guide.path}>\n        {children}\n      </a>\n    )\n\n  return (\n    <div className=\"grid guide\">\n      {data.map((guide) => {\n        return (\n          <LinkType key={guide.id} guide={guide}>\n            {guide.staticThumbnail ? (\n              <img\n                src={guide.staticThumbnail}\n                alt={guide.id}\n                height=\"50\"\n                width=\"50\"\n              />\n            ) : (\n              <Img fixed={guide.thumbnail} />\n            )}\n            <h2>{guide.title}</h2>\n            {guide.description && <p className=\"description\">{guide.description}</p>}\n          </LinkType>\n        )\n      })}\n    </div>\n  )\n}\n"],"sourceRoot":""}