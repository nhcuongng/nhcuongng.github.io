{"version":3,"sources":["webpack:///./content/images/nhcuong.jpg","webpack:///./src/components/TechStack/index.js","webpack:///./src/pages/index.js","webpack:///./src/components/Guides.js","webpack:///./src/components/Posts.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["module","exports","TechStack","className","href","BlogIndex","data","latest","edges","popular","simplifiedLatest","useMemo","getSimplifiedPosts","Section","title","children","button","props","to","Layout","Helmet","config","siteTitle","SEO","class","target","rel","src","nhcuong","alt","Posts","tags","withDate","pageQuery","Guides","LinkType","guide","slug","key","id","path","map","staticThumbnail","height","width","fixed","thumbnail","description","Cell","node","date","Date","oneMonthAgo","setMonth","getMonth","isNew","tag","slugify","showYears","postsByYear","forEach","post","year","split","years","Object","keys","reverse","_objectWithoutPropertiesLoose","source","excluded","i","sourceKeys","length","indexOf"],"mappings":"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","file":"component---src-pages-index-js-8efd379a11076619c8b3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/nhcuong-296c43b8bd0e6938f2c1348b8774c30d.jpg\";","import React from 'react'\nimport './style.css'\n\n\n\nexport const TechStack = () => {\n  return (\n    <div>\n      <p className=\"skill-name\">React JS/ Next JS/ Redux / Redux-saga/ Redux-thunk</p>\n      <div className=\"skill-wrapper\">\n        <div className=\"skills react-js\">90%</div>\n      </div>\n      <p className=\"skill-name\">Typescript</p>\n      <div className=\"skill-wrapper\">\n        <div className=\"skills typescript\">90%</div>\n      </div>\n      <p className=\"skill-name\">JavaScript</p>\n      <div className=\"skill-wrapper\">\n        <div className=\"skills js\">90%</div>\n      </div>\n      <p className=\"skill-name\">CSS</p>\n      <div className=\"skill-wrapper\">\n        <div className=\"skills css\">80%</div>\n      </div>\n      <p className=\"skill-name\">SCSS</p>\n      <div className=\"skill-wrapper\">\n        <div className=\"skills scss\">80%</div>\n      </div>\n      <div className=\"my-cv\">\n        Here is <a href=\"https://www.topcv.vn/xem-cv/UQNRVFJTBwMABVNXU1BSXFAPUldWBFsGBVFUAg13ce\">my CV</a> if you want find more about me\n      </div>\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\n\nimport Layout from '../components/Layout'\nimport Posts from '../components/Posts'\nimport Guides from '../components/Guides'\nimport Projects from '../components/Projects'\nimport { TechStack } from '../components/TechStack'\nimport SEO from '../components/SEO'\n\nimport { getSimplifiedPosts } from '../utils/helpers'\nimport config from '../utils/config'\n\n// import projects from '../data/projects'\n// import interviews from '../data/interviews'\n// import speaking from '../data/speaking'\n\nimport nhcuong from '../../content/images/nhcuong.jpg'\n\nexport default function BlogIndex({ data }) {\n  const latest = data.latest.edges\n  const popular = data.popular.edges\n  const simplifiedLatest = useMemo(() => getSimplifiedPosts(latest), [latest])\n  const simplifiedPopular = useMemo(() => getSimplifiedPosts(popular), [\n    popular,\n  ])\n\n  const Section = ({ title, children, button, ...props }) => (\n    <section {...props}>\n      <h2>\n        {title}\n        {button && (\n          <Link className=\"section-button\" to=\"/blog\">\n            View all\n          </Link>\n        )}\n      </h2>\n      {children}\n    </section>\n  )\n\n  return (\n    <Layout>\n      <Helmet title={config.siteTitle} />\n      <SEO />\n      <section className=\"lead\">\n        <div className=\"container\">\n          <div className=\"copy\">\n            <div class=\"typewriter\">\n              <h1>\n                Hello! I'm Mason.\n              </h1>\n            </div>\n            <p>\n              I'm a front end developer. This website is a little part of my life.\n              The good code was made with ‚ù§Ô∏è and by üôå\n            </p>\n            <div className=\"contact\">\n              <a\n                href=\"mailto:cuong.nguyenhuu1997@gmail.com\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"button\"\n              >\n                <span className=\"emoji\">üíå</span> Contact to me\n              </a>\n              <a\n                href=\"https://docs.google.com/forms/d/e/1FAIpQLSfg1e-EZU3s5EJotrWram7_hjkx82vtJXU4aWABkSsaKMXZEQ/viewform?usp=sf_link\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"button secondary\"\n              >\n                <span className=\"emoji\">üì£</span>\n                Give Feedback\n              </a>\n            </div>\n          </div>\n\n          <div className=\"image\">\n            <img src={nhcuong} alt=\"Tania\" />\n          </div>\n        </div>\n      </section>\n      <div className=\"container index\">\n        <Section title=\"Technical Stack\">\n          <TechStack />\n        </Section>\n        <Section title=\"Latest Articles.\" button>\n          <Posts data={simplifiedLatest} tags withDate />\n        </Section>\n        {/* <Section title=\"B√†i vi·∫øt ph·ªï bi·∫øn\" button>\n          <Posts data={simplifiedPopular} tags withDate />\n        </Section> */}\n        {/* <Section title=\"Projects\">\n          <Projects data={projects} />\n        </Section> */}\n        {/* <Section title=\"Interviews\">\n          <Guides data={interviews} />\n        </Section>\n        <Section title=\"Speaking\">\n          <Guides data={speaking} />\n        </Section> */}\n        {/* <Section title=\"Source\">\n          <p>\n            Thanks to <a href=\"https://www.taniarascia.com/\">Tania Rascia</a> for awsome template\n          </p>\n          <a\n            href=\"https://github.com/taniarascia/taniarascia.com/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"button\"\n          >\n            <span className=\"emoji\">ü§û </span> source this template\n          </a>\n        </Section> */}\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    latest: allMarkdownRemark(\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\") \n            title\n            tags\n          }\n        }\n      }\n    }\n    popular: allMarkdownRemark(\n      limit: 20\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { categories: { eq: \"Popular\" } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nexport default function Guides({ data }) {\n  const LinkType = ({ guide, children }) =>\n    guide.slug ? (\n      <Link key={guide.id} to={guide.slug}>\n        {children}\n      </Link>\n    ) : (\n      <a key={guide.id} href={guide.path}>\n        {children}\n      </a>\n    )\n\n  return (\n    <div className=\"grid guide\">\n      {data.map((guide) => {\n        return (\n          <LinkType key={guide.id} guide={guide}>\n            {guide.staticThumbnail ? (\n              <img\n                src={guide.staticThumbnail}\n                alt={guide.id}\n                height=\"50\"\n                width=\"50\"\n              />\n            ) : (\n              <Img fixed={guide.thumbnail} />\n            )}\n            <h2>{guide.title}</h2>\n            {guide.description && <p className=\"description\">{guide.description}</p>}\n          </LinkType>\n        )\n      })}\n    </div>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Link } from 'gatsby'\n\nimport { slugify } from '../utils/helpers'\n\nconst Cell = ({ node, tags, withDate }) => {\n  const date = new Date(node.date)\n  const oneMonthAgo = new Date()\n  oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n  let isNew = false\n\n  if (date > oneMonthAgo) {\n    isNew = true\n  }\n\n  return (\n    <div className={`row ${!withDate ? 'narrow' : ''}`} key={node.id}>\n      <Link to={node.slug} className=\"cell\">\n        {isNew && <div className=\"new-post\">New!</div>}\n        <div>\n          {withDate && <time>{node.date}</time>}\n          <div>{node.title}</div>\n        </div>\n      </Link>\n      {tags && (\n        <div className=\"cell tags\">\n          {node.tags &&\n            node.tags.map((tag) => (\n              <Link\n                key={tag}\n                to={`/tags/${slugify(tag)}`}\n                className={`tag-${tag}`}\n              >\n                {tag}\n              </Link>\n            ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default function Posts({ data, tags, showYears, withDate }) {\n  const postsByYear = {}\n\n  data.forEach((post) => {\n    const year = post.date.split(', ')[1]\n\n    postsByYear[year] = [...(postsByYear[year] || []), post]\n  })\n\n  const years = useMemo(() => Object.keys(postsByYear).reverse(), [postsByYear])\n\n  if (showYears) {\n    return years.map((year) => (\n      <section key={year}>\n        <h2>{year}</h2>\n        <div className={tags ? 'grid posts with-tags' : 'grid posts'}>\n          {postsByYear[year].map((node) => (\n            <Cell key={node.id} node={node} tags={tags} withDate={withDate} />\n          ))}\n        </div>\n      </section>\n    ))\n  } else {\n    return (\n      <div className={tags ? 'grid posts with-tags' : 'grid posts'}>\n        {data.map((node) => (\n          <Cell key={node.id} node={node} tags={tags} withDate={withDate} />\n        ))}\n      </div>\n    )\n  }\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}